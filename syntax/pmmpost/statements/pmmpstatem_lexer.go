// Generated from PMMPStatem.g4 by ANTLR 4.7.

package statements

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 57, 555,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 4, 48, 9, 48, 4, 49, 9,
	49, 4, 50, 9, 50, 4, 51, 9, 51, 4, 52, 9, 52, 4, 53, 9, 53, 4, 54, 9, 54,
	4, 55, 9, 55, 4, 56, 9, 56, 4, 57, 9, 57, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2,
	3, 2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	3, 4, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5,
	3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7,
	3, 7, 3, 7, 3, 7, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 9, 3, 9,
	3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3,
	11, 3, 11, 3, 12, 3, 12, 3, 13, 3, 13, 3, 14, 3, 14, 3, 15, 3, 15, 3, 16,
	3, 16, 3, 17, 3, 17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 19, 3, 19, 5, 19, 200,
	10, 19, 3, 19, 3, 19, 3, 19, 3, 19, 5, 19, 206, 10, 19, 3, 19, 5, 19, 209,
	10, 19, 3, 20, 3, 20, 3, 21, 3, 21, 3, 22, 3, 22, 3, 23, 3, 23, 3, 24,
	3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 5, 24, 228, 10,
	24, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25,
	5, 25, 240, 10, 25, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3,
	26, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28,
	3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3,
	29, 5, 29, 271, 10, 29, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30,
	3, 30, 3, 30, 3, 30, 5, 30, 283, 10, 30, 3, 31, 3, 31, 3, 31, 3, 31, 3,
	31, 3, 31, 3, 31, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32,
	3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 5, 32, 305, 10, 32, 3, 33, 3, 33, 3,
	33, 3, 33, 3, 33, 3, 34, 3, 34, 3, 34, 3, 34, 3, 34, 3, 34, 3, 35, 3, 35,
	3, 35, 3, 36, 3, 36, 3, 36, 3, 36, 3, 36, 3, 36, 3, 36, 3, 37, 3, 37, 3,
	37, 3, 37, 3, 37, 3, 37, 3, 37, 3, 37, 3, 38, 3, 38, 3, 38, 3, 38, 3, 38,
	3, 38, 3, 38, 3, 38, 3, 39, 3, 39, 3, 39, 3, 39, 3, 39, 3, 39, 3, 39, 3,
	39, 3, 40, 3, 40, 3, 40, 3, 40, 3, 40, 3, 40, 3, 40, 3, 40, 3, 41, 3, 41,
	3, 41, 3, 41, 3, 41, 3, 41, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3,
	42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42,
	3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 5,
	42, 393, 10, 42, 3, 43, 3, 43, 3, 43, 3, 43, 3, 43, 3, 43, 3, 43, 3, 43,
	3, 43, 3, 43, 3, 43, 3, 43, 3, 43, 3, 43, 3, 43, 3, 43, 3, 43, 3, 43, 3,
	44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44,
	3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 5, 44, 431, 10, 44, 3,
	45, 3, 45, 3, 45, 3, 45, 3, 45, 3, 45, 3, 45, 5, 45, 440, 10, 45, 3, 46,
	3, 46, 3, 46, 3, 46, 3, 46, 3, 46, 3, 46, 3, 46, 3, 46, 3, 46, 3, 46, 3,
	47, 3, 47, 3, 47, 3, 47, 3, 47, 3, 47, 3, 47, 3, 47, 3, 47, 3, 48, 6, 48,
	463, 10, 48, 13, 48, 14, 48, 464, 3, 48, 3, 48, 3, 49, 6, 49, 470, 10,
	49, 13, 49, 14, 49, 471, 3, 50, 3, 50, 7, 50, 476, 10, 50, 12, 50, 14,
	50, 479, 11, 50, 3, 51, 3, 51, 3, 51, 5, 51, 484, 10, 51, 3, 51, 7, 51,
	487, 10, 51, 12, 51, 14, 51, 490, 11, 51, 3, 51, 3, 51, 3, 52, 3, 52, 3,
	52, 5, 52, 497, 10, 52, 3, 52, 7, 52, 500, 10, 52, 12, 52, 14, 52, 503,
	11, 52, 3, 53, 6, 53, 506, 10, 53, 13, 53, 14, 53, 507, 3, 53, 3, 53, 6,
	53, 512, 10, 53, 13, 53, 14, 53, 513, 5, 53, 516, 10, 53, 3, 53, 5, 53,
	519, 10, 53, 3, 54, 3, 54, 3, 55, 3, 55, 3, 55, 6, 55, 526, 10, 55, 13,
	55, 14, 55, 527, 3, 55, 3, 55, 3, 56, 3, 56, 3, 56, 3, 56, 7, 56, 536,
	10, 56, 12, 56, 14, 56, 539, 11, 56, 3, 56, 5, 56, 542, 10, 56, 3, 56,
	3, 56, 3, 57, 6, 57, 547, 10, 57, 13, 57, 14, 57, 548, 3, 57, 5, 57, 552,
	10, 57, 3, 57, 3, 57, 3, 537, 2, 58, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13,
	8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17,
	33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 26,
	51, 27, 53, 28, 55, 29, 57, 30, 59, 31, 61, 32, 63, 33, 65, 34, 67, 35,
	69, 36, 71, 37, 73, 38, 75, 39, 77, 40, 79, 41, 81, 42, 83, 43, 85, 44,
	87, 45, 89, 46, 91, 47, 93, 48, 95, 49, 97, 50, 99, 51, 101, 52, 103, 53,
	105, 54, 107, 55, 109, 56, 111, 2, 113, 57, 3, 2, 9, 4, 2, 50, 59, 99,
	104, 3, 2, 99, 124, 3, 2, 67, 92, 4, 2, 67, 92, 99, 124, 5, 2, 48, 48,
	50, 59, 99, 124, 8, 2, 34, 34, 47, 47, 50, 59, 67, 92, 97, 97, 99, 124,
	5, 2, 11, 12, 15, 15, 34, 34, 2, 586, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2,
	2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2,
	2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3,
	2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29,
	3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2,
	37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2,
	2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2,
	2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2,
	2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3,
	2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 2, 75,
	3, 2, 2, 2, 2, 77, 3, 2, 2, 2, 2, 79, 3, 2, 2, 2, 2, 81, 3, 2, 2, 2, 2,
	83, 3, 2, 2, 2, 2, 85, 3, 2, 2, 2, 2, 87, 3, 2, 2, 2, 2, 89, 3, 2, 2, 2,
	2, 91, 3, 2, 2, 2, 2, 93, 3, 2, 2, 2, 2, 95, 3, 2, 2, 2, 2, 97, 3, 2, 2,
	2, 2, 99, 3, 2, 2, 2, 2, 101, 3, 2, 2, 2, 2, 103, 3, 2, 2, 2, 2, 105, 3,
	2, 2, 2, 2, 107, 3, 2, 2, 2, 2, 109, 3, 2, 2, 2, 2, 113, 3, 2, 2, 2, 3,
	115, 3, 2, 2, 2, 5, 124, 3, 2, 2, 2, 7, 131, 3, 2, 2, 2, 9, 136, 3, 2,
	2, 2, 11, 149, 3, 2, 2, 2, 13, 154, 3, 2, 2, 2, 15, 159, 3, 2, 2, 2, 17,
	166, 3, 2, 2, 2, 19, 176, 3, 2, 2, 2, 21, 179, 3, 2, 2, 2, 23, 181, 3,
	2, 2, 2, 25, 183, 3, 2, 2, 2, 27, 185, 3, 2, 2, 2, 29, 187, 3, 2, 2, 2,
	31, 189, 3, 2, 2, 2, 33, 191, 3, 2, 2, 2, 35, 193, 3, 2, 2, 2, 37, 208,
	3, 2, 2, 2, 39, 210, 3, 2, 2, 2, 41, 212, 3, 2, 2, 2, 43, 214, 3, 2, 2,
	2, 45, 216, 3, 2, 2, 2, 47, 227, 3, 2, 2, 2, 49, 239, 3, 2, 2, 2, 51, 241,
	3, 2, 2, 2, 53, 249, 3, 2, 2, 2, 55, 254, 3, 2, 2, 2, 57, 270, 3, 2, 2,
	2, 59, 282, 3, 2, 2, 2, 61, 284, 3, 2, 2, 2, 63, 304, 3, 2, 2, 2, 65, 306,
	3, 2, 2, 2, 67, 311, 3, 2, 2, 2, 69, 317, 3, 2, 2, 2, 71, 320, 3, 2, 2,
	2, 73, 327, 3, 2, 2, 2, 75, 335, 3, 2, 2, 2, 77, 343, 3, 2, 2, 2, 79, 351,
	3, 2, 2, 2, 81, 359, 3, 2, 2, 2, 83, 392, 3, 2, 2, 2, 85, 394, 3, 2, 2,
	2, 87, 430, 3, 2, 2, 2, 89, 432, 3, 2, 2, 2, 91, 441, 3, 2, 2, 2, 93, 452,
	3, 2, 2, 2, 95, 462, 3, 2, 2, 2, 97, 469, 3, 2, 2, 2, 99, 473, 3, 2, 2,
	2, 101, 483, 3, 2, 2, 2, 103, 496, 3, 2, 2, 2, 105, 505, 3, 2, 2, 2, 107,
	520, 3, 2, 2, 2, 109, 522, 3, 2, 2, 2, 111, 531, 3, 2, 2, 2, 113, 551,
	3, 2, 2, 2, 115, 116, 7, 100, 2, 2, 116, 117, 7, 103, 2, 2, 117, 118, 7,
	105, 2, 2, 118, 119, 7, 107, 2, 2, 119, 120, 7, 112, 2, 2, 120, 121, 7,
	104, 2, 2, 121, 122, 7, 107, 2, 2, 122, 123, 7, 105, 2, 2, 123, 4, 3, 2,
	2, 2, 124, 125, 7, 103, 2, 2, 125, 126, 7, 112, 2, 2, 126, 127, 7, 102,
	2, 2, 127, 128, 7, 104, 2, 2, 128, 129, 7, 107, 2, 2, 129, 130, 7, 105,
	2, 2, 130, 6, 3, 2, 2, 2, 131, 132, 7, 117, 2, 2, 132, 133, 7, 99, 2, 2,
	133, 134, 7, 120, 2, 2, 134, 135, 7, 103, 2, 2, 135, 8, 3, 2, 2, 2, 136,
	137, 7, 117, 2, 2, 137, 138, 7, 106, 2, 2, 138, 139, 7, 113, 2, 2, 139,
	140, 7, 121, 2, 2, 140, 141, 7, 120, 2, 2, 141, 142, 7, 99, 2, 2, 142,
	143, 7, 116, 2, 2, 143, 144, 7, 107, 2, 2, 144, 145, 7, 99, 2, 2, 145,
	146, 7, 100, 2, 2, 146, 147, 7, 110, 2, 2, 147, 148, 7, 103, 2, 2, 148,
	10, 3, 2, 2, 2, 149, 150, 7, 102, 2, 2, 150, 151, 7, 116, 2, 2, 151, 152,
	7, 99, 2, 2, 152, 153, 7, 121, 2, 2, 153, 12, 3, 2, 2, 2, 154, 155, 7,
	104, 2, 2, 155, 156, 7, 107, 2, 2, 156, 157, 7, 110, 2, 2, 157, 158, 7,
	110, 2, 2, 158, 14, 3, 2, 2, 2, 159, 160, 7, 114, 2, 2, 160, 161, 7, 107,
	2, 2, 161, 162, 7, 101, 2, 2, 162, 163, 7, 109, 2, 2, 163, 164, 7, 119,
	2, 2, 164, 165, 7, 114, 2, 2, 165, 16, 3, 2, 2, 2, 166, 167, 7, 121, 2,
	2, 167, 168, 7, 107, 2, 2, 168, 169, 7, 118, 2, 2, 169, 170, 7, 106, 2,
	2, 170, 171, 7, 101, 2, 2, 171, 172, 7, 113, 2, 2, 172, 173, 7, 110, 2,
	2, 173, 174, 7, 113, 2, 2, 174, 175, 7, 116, 2, 2, 175, 18, 3, 2, 2, 2,
	176, 177, 7, 60, 2, 2, 177, 178, 7, 63, 2, 2, 178, 20, 3, 2, 2, 2, 179,
	180, 7, 63, 2, 2, 180, 22, 3, 2, 2, 2, 181, 182, 7, 60, 2, 2, 182, 24,
	3, 2, 2, 2, 183, 184, 7, 61, 2, 2, 184, 26, 3, 2, 2, 2, 185, 186, 7, 46,
	2, 2, 186, 28, 3, 2, 2, 2, 187, 188, 7, 42, 2, 2, 188, 30, 3, 2, 2, 2,
	189, 190, 7, 43, 2, 2, 190, 32, 3, 2, 2, 2, 191, 192, 7, 93, 2, 2, 192,
	34, 3, 2, 2, 2, 193, 194, 7, 95, 2, 2, 194, 36, 3, 2, 2, 2, 195, 196, 7,
	47, 2, 2, 196, 197, 7, 47, 2, 2, 197, 199, 3, 2, 2, 2, 198, 200, 7, 47,
	2, 2, 199, 198, 3, 2, 2, 2, 199, 200, 3, 2, 2, 2, 200, 209, 3, 2, 2, 2,
	201, 202, 7, 48, 2, 2, 202, 203, 7, 48, 2, 2, 203, 205, 3, 2, 2, 2, 204,
	206, 7, 48, 2, 2, 205, 204, 3, 2, 2, 2, 205, 206, 3, 2, 2, 2, 206, 209,
	3, 2, 2, 2, 207, 209, 7, 40, 2, 2, 208, 195, 3, 2, 2, 2, 208, 201, 3, 2,
	2, 2, 208, 207, 3, 2, 2, 2, 209, 38, 3, 2, 2, 2, 210, 211, 7, 45, 2, 2,
	211, 40, 3, 2, 2, 2, 212, 213, 7, 47, 2, 2, 213, 42, 3, 2, 2, 2, 214, 215,
	7, 44, 2, 2, 215, 44, 3, 2, 2, 2, 216, 217, 7, 49, 2, 2, 217, 46, 3, 2,
	2, 2, 218, 228, 7, 65, 2, 2, 219, 220, 7, 121, 2, 2, 220, 221, 7, 106,
	2, 2, 221, 222, 7, 99, 2, 2, 222, 223, 7, 118, 2, 2, 223, 224, 7, 103,
	2, 2, 224, 225, 7, 120, 2, 2, 225, 226, 7, 103, 2, 2, 226, 228, 7, 116,
	2, 2, 227, 218, 3, 2, 2, 2, 227, 219, 3, 2, 2, 2, 228, 48, 3, 2, 2, 2,
	229, 230, 7, 111, 2, 2, 230, 240, 7, 111, 2, 2, 231, 232, 7, 101, 2, 2,
	232, 240, 7, 111, 2, 2, 233, 234, 7, 107, 2, 2, 234, 240, 7, 112, 2, 2,
	235, 236, 7, 114, 2, 2, 236, 240, 7, 118, 2, 2, 237, 238, 7, 114, 2, 2,
	238, 240, 7, 101, 2, 2, 239, 229, 3, 2, 2, 2, 239, 231, 3, 2, 2, 2, 239,
	233, 3, 2, 2, 2, 239, 235, 3, 2, 2, 2, 239, 237, 3, 2, 2, 2, 240, 50, 3,
	2, 2, 2, 241, 242, 7, 112, 2, 2, 242, 243, 7, 119, 2, 2, 243, 244, 7, 111,
	2, 2, 244, 245, 7, 103, 2, 2, 245, 246, 7, 116, 2, 2, 246, 247, 7, 107,
	2, 2, 247, 248, 7, 101, 2, 2, 248, 52, 3, 2, 2, 2, 249, 250, 7, 114, 2,
	2, 250, 251, 7, 99, 2, 2, 251, 252, 7, 107, 2, 2, 252, 253, 7, 116, 2,
	2, 253, 54, 3, 2, 2, 2, 254, 255, 7, 114, 2, 2, 255, 256, 7, 99, 2, 2,
	256, 257, 7, 118, 2, 2, 257, 258, 7, 106, 2, 2, 258, 56, 3, 2, 2, 2, 259,
	260, 7, 121, 2, 2, 260, 261, 7, 107, 2, 2, 261, 262, 7, 102, 2, 2, 262,
	263, 7, 118, 2, 2, 263, 271, 7, 106, 2, 2, 264, 265, 7, 106, 2, 2, 265,
	266, 7, 103, 2, 2, 266, 267, 7, 107, 2, 2, 267, 268, 7, 105, 2, 2, 268,
	269, 7, 106, 2, 2, 269, 271, 7, 118, 2, 2, 270, 259, 3, 2, 2, 2, 270, 264,
	3, 2, 2, 2, 271, 58, 3, 2, 2, 2, 272, 273, 7, 122, 2, 2, 273, 274, 7, 114,
	2, 2, 274, 275, 7, 99, 2, 2, 275, 276, 7, 116, 2, 2, 276, 283, 7, 118,
	2, 2, 277, 278, 7, 123, 2, 2, 278, 279, 7, 114, 2, 2, 279, 280, 7, 99,
	2, 2, 280, 281, 7, 116, 2, 2, 281, 283, 7, 118, 2, 2, 282, 272, 3, 2, 2,
	2, 282, 277, 3, 2, 2, 2, 283, 60, 3, 2, 2, 2, 284, 285, 7, 110, 2, 2, 285,
	286, 7, 103, 2, 2, 286, 287, 7, 112, 2, 2, 287, 288, 7, 105, 2, 2, 288,
	289, 7, 118, 2, 2, 289, 290, 7, 106, 2, 2, 290, 62, 3, 2, 2, 2, 291, 292,
	7, 104, 2, 2, 292, 293, 7, 110, 2, 2, 293, 294, 7, 113, 2, 2, 294, 295,
	7, 113, 2, 2, 295, 305, 7, 116, 2, 2, 296, 297, 7, 101, 2, 2, 297, 298,
	7, 103, 2, 2, 298, 299, 7, 107, 2, 2, 299, 305, 7, 110, 2, 2, 300, 301,
	7, 117, 2, 2, 301, 302, 7, 115, 2, 2, 302, 303, 7, 116, 2, 2, 303, 305,
	7, 118, 2, 2, 304, 291, 3, 2, 2, 2, 304, 296, 3, 2, 2, 2, 304, 300, 3,
	2, 2, 2, 305, 64, 3, 2, 2, 2, 306, 307, 7, 121, 2, 2, 307, 308, 7, 107,
	2, 2, 308, 309, 7, 118, 2, 2, 309, 310, 7, 106, 2, 2, 310, 66, 3, 2, 2,
	2, 311, 312, 7, 114, 2, 2, 312, 313, 7, 113, 2, 2, 313, 314, 7, 107, 2,
	2, 314, 315, 7, 112, 2, 2, 315, 316, 7, 118, 2, 2, 316, 68, 3, 2, 2, 2,
	317, 318, 7, 113, 2, 2, 318, 319, 7, 104, 2, 2, 319, 70, 3, 2, 2, 2, 320,
	321, 7, 117, 2, 2, 321, 322, 7, 101, 2, 2, 322, 323, 7, 99, 2, 2, 323,
	324, 7, 110, 2, 2, 324, 325, 7, 103, 2, 2, 325, 326, 7, 102, 2, 2, 326,
	72, 3, 2, 2, 2, 327, 328, 7, 117, 2, 2, 328, 329, 7, 106, 2, 2, 329, 330,
	7, 107, 2, 2, 330, 331, 7, 104, 2, 2, 331, 332, 7, 118, 2, 2, 332, 333,
	7, 103, 2, 2, 333, 334, 7, 102, 2, 2, 334, 74, 3, 2, 2, 2, 335, 336, 7,
	116, 2, 2, 336, 337, 7, 113, 2, 2, 337, 338, 7, 118, 2, 2, 338, 339, 7,
	99, 2, 2, 339, 340, 7, 118, 2, 2, 340, 341, 7, 103, 2, 2, 341, 342, 7,
	102, 2, 2, 342, 76, 3, 2, 2, 2, 343, 344, 7, 117, 2, 2, 344, 345, 7, 119,
	2, 2, 345, 346, 7, 100, 2, 2, 346, 347, 7, 114, 2, 2, 347, 348, 7, 99,
	2, 2, 348, 349, 7, 118, 2, 2, 349, 350, 7, 106, 2, 2, 350, 78, 3, 2, 2,
	2, 351, 352, 7, 116, 2, 2, 352, 353, 7, 103, 2, 2, 353, 354, 7, 120, 2,
	2, 354, 355, 7, 103, 2, 2, 355, 356, 7, 116, 2, 2, 356, 357, 7, 117, 2,
	2, 357, 358, 7, 103, 2, 2, 358, 80, 3, 2, 2, 2, 359, 360, 7, 101, 2, 2,
	360, 361, 7, 123, 2, 2, 361, 362, 7, 101, 2, 2, 362, 363, 7, 110, 2, 2,
	363, 364, 7, 103, 2, 2, 364, 82, 3, 2, 2, 2, 365, 366, 7, 119, 2, 2, 366,
	367, 7, 112, 2, 2, 367, 368, 7, 107, 2, 2, 368, 369, 7, 113, 2, 2, 369,
	393, 7, 112, 2, 2, 370, 371, 7, 107, 2, 2, 371, 372, 7, 112, 2, 2, 372,
	373, 7, 118, 2, 2, 373, 374, 7, 103, 2, 2, 374, 375, 7, 116, 2, 2, 375,
	376, 7, 117, 2, 2, 376, 377, 7, 103, 2, 2, 377, 378, 7, 101, 2, 2, 378,
	379, 7, 118, 2, 2, 379, 380, 7, 107, 2, 2, 380, 381, 7, 113, 2, 2, 381,
	393, 7, 112, 2, 2, 382, 383, 7, 102, 2, 2, 383, 384, 7, 107, 2, 2, 384,
	385, 7, 104, 2, 2, 385, 386, 7, 104, 2, 2, 386, 387, 7, 103, 2, 2, 387,
	388, 7, 116, 2, 2, 388, 389, 7, 103, 2, 2, 389, 390, 7, 112, 2, 2, 390,
	391, 7, 101, 2, 2, 391, 393, 7, 103, 2, 2, 392, 365, 3, 2, 2, 2, 392, 370,
	3, 2, 2, 2, 392, 382, 3, 2, 2, 2, 393, 84, 3, 2, 2, 2, 394, 395, 7, 107,
	2, 2, 395, 396, 7, 112, 2, 2, 396, 397, 7, 118, 2, 2, 397, 398, 7, 103,
	2, 2, 398, 399, 7, 116, 2, 2, 399, 400, 7, 117, 2, 2, 400, 401, 7, 103,
	2, 2, 401, 402, 7, 101, 2, 2, 402, 403, 7, 118, 2, 2, 403, 404, 7, 107,
	2, 2, 404, 405, 7, 113, 2, 2, 405, 406, 7, 112, 2, 2, 406, 407, 7, 114,
	2, 2, 407, 408, 7, 113, 2, 2, 408, 409, 7, 107, 2, 2, 409, 410, 7, 112,
	2, 2, 410, 411, 7, 118, 2, 2, 411, 86, 3, 2, 2, 2, 412, 413, 7, 114, 2,
	2, 413, 414, 7, 103, 2, 2, 414, 415, 7, 112, 2, 2, 415, 416, 7, 101, 2,
	2, 416, 417, 7, 107, 2, 2, 417, 418, 7, 116, 2, 2, 418, 419, 7, 101, 2,
	2, 419, 420, 7, 110, 2, 2, 420, 431, 7, 103, 2, 2, 421, 422, 7, 114, 2,
	2, 422, 423, 7, 103, 2, 2, 423, 424, 7, 112, 2, 2, 424, 425, 7, 117, 2,
	2, 425, 426, 7, 115, 2, 2, 426, 427, 7, 119, 2, 2, 427, 428, 7, 99, 2,
	2, 428, 429, 7, 116, 2, 2, 429, 431, 7, 103, 2, 2, 430, 412, 3, 2, 2, 2,
	430, 421, 3, 2, 2, 2, 431, 88, 3, 2, 2, 2, 432, 433, 7, 37, 2, 2, 433,
	434, 9, 2, 2, 2, 434, 435, 9, 2, 2, 2, 435, 439, 9, 2, 2, 2, 436, 437,
	9, 2, 2, 2, 437, 438, 9, 2, 2, 2, 438, 440, 9, 2, 2, 2, 439, 436, 3, 2,
	2, 2, 439, 440, 3, 2, 2, 2, 440, 90, 3, 2, 2, 2, 441, 442, 7, 100, 2, 2,
	442, 443, 7, 103, 2, 2, 443, 444, 7, 105, 2, 2, 444, 445, 7, 107, 2, 2,
	445, 446, 7, 112, 2, 2, 446, 447, 7, 105, 2, 2, 447, 448, 7, 116, 2, 2,
	448, 449, 7, 113, 2, 2, 449, 450, 7, 119, 2, 2, 450, 451, 7, 114, 2, 2,
	451, 92, 3, 2, 2, 2, 452, 453, 7, 103, 2, 2, 453, 454, 7, 112, 2, 2, 454,
	455, 7, 102, 2, 2, 455, 456, 7, 105, 2, 2, 456, 457, 7, 116, 2, 2, 457,
	458, 7, 113, 2, 2, 458, 459, 7, 119, 2, 2, 459, 460, 7, 114, 2, 2, 460,
	94, 3, 2, 2, 2, 461, 463, 9, 3, 2, 2, 462, 461, 3, 2, 2, 2, 463, 464, 3,
	2, 2, 2, 464, 462, 3, 2, 2, 2, 464, 465, 3, 2, 2, 2, 465, 466, 3, 2, 2,
	2, 466, 467, 6, 48, 2, 2, 467, 96, 3, 2, 2, 2, 468, 470, 9, 3, 2, 2, 469,
	468, 3, 2, 2, 2, 470, 471, 3, 2, 2, 2, 471, 469, 3, 2, 2, 2, 471, 472,
	3, 2, 2, 2, 472, 98, 3, 2, 2, 2, 473, 477, 9, 4, 2, 2, 474, 476, 9, 5,
	2, 2, 475, 474, 3, 2, 2, 2, 476, 479, 3, 2, 2, 2, 477, 475, 3, 2, 2, 2,
	477, 478, 3, 2, 2, 2, 478, 100, 3, 2, 2, 2, 479, 477, 3, 2, 2, 2, 480,
	481, 7, 48, 2, 2, 481, 484, 9, 3, 2, 2, 482, 484, 9, 3, 2, 2, 483, 480,
	3, 2, 2, 2, 483, 482, 3, 2, 2, 2, 484, 488, 3, 2, 2, 2, 485, 487, 9, 6,
	2, 2, 486, 485, 3, 2, 2, 2, 487, 490, 3, 2, 2, 2, 488, 486, 3, 2, 2, 2,
	488, 489, 3, 2, 2, 2, 489, 491, 3, 2, 2, 2, 490, 488, 3, 2, 2, 2, 491,
	492, 6, 51, 3, 2, 492, 102, 3, 2, 2, 2, 493, 494, 7, 48, 2, 2, 494, 497,
	9, 3, 2, 2, 495, 497, 9, 3, 2, 2, 496, 493, 3, 2, 2, 2, 496, 495, 3, 2,
	2, 2, 497, 501, 3, 2, 2, 2, 498, 500, 9, 6, 2, 2, 499, 498, 3, 2, 2, 2,
	500, 503, 3, 2, 2, 2, 501, 499, 3, 2, 2, 2, 501, 502, 3, 2, 2, 2, 502,
	104, 3, 2, 2, 2, 503, 501, 3, 2, 2, 2, 504, 506, 4, 50, 59, 2, 505, 504,
	3, 2, 2, 2, 506, 507, 3, 2, 2, 2, 507, 505, 3, 2, 2, 2, 507, 508, 3, 2,
	2, 2, 508, 515, 3, 2, 2, 2, 509, 511, 5, 107, 54, 2, 510, 512, 4, 50, 59,
	2, 511, 510, 3, 2, 2, 2, 512, 513, 3, 2, 2, 2, 513, 511, 3, 2, 2, 2, 513,
	514, 3, 2, 2, 2, 514, 516, 3, 2, 2, 2, 515, 509, 3, 2, 2, 2, 515, 516,
	3, 2, 2, 2, 516, 518, 3, 2, 2, 2, 517, 519, 7, 39, 2, 2, 518, 517, 3, 2,
	2, 2, 518, 519, 3, 2, 2, 2, 519, 106, 3, 2, 2, 2, 520, 521, 7, 48, 2, 2,
	521, 108, 3, 2, 2, 2, 522, 523, 7, 36, 2, 2, 523, 525, 9, 5, 2, 2, 524,
	526, 9, 7, 2, 2, 525, 524, 3, 2, 2, 2, 526, 527, 3, 2, 2, 2, 527, 525,
	3, 2, 2, 2, 527, 528, 3, 2, 2, 2, 528, 529, 3, 2, 2, 2, 529, 530, 7, 36,
	2, 2, 530, 110, 3, 2, 2, 2, 531, 532, 7, 49, 2, 2, 532, 533, 7, 49, 2,
	2, 533, 537, 3, 2, 2, 2, 534, 536, 11, 2, 2, 2, 535, 534, 3, 2, 2, 2, 536,
	539, 3, 2, 2, 2, 537, 538, 3, 2, 2, 2, 537, 535, 3, 2, 2, 2, 538, 541,
	3, 2, 2, 2, 539, 537, 3, 2, 2, 2, 540, 542, 7, 15, 2, 2, 541, 540, 3, 2,
	2, 2, 541, 542, 3, 2, 2, 2, 542, 543, 3, 2, 2, 2, 543, 544, 7, 12, 2, 2,
	544, 112, 3, 2, 2, 2, 545, 547, 9, 8, 2, 2, 546, 545, 3, 2, 2, 2, 547,
	548, 3, 2, 2, 2, 548, 546, 3, 2, 2, 2, 548, 549, 3, 2, 2, 2, 549, 552,
	3, 2, 2, 2, 550, 552, 5, 111, 56, 2, 551, 546, 3, 2, 2, 2, 551, 550, 3,
	2, 2, 2, 552, 553, 3, 2, 2, 2, 553, 554, 8, 57, 2, 2, 554, 114, 3, 2, 2,
	2, 32, 2, 199, 205, 208, 227, 239, 270, 282, 304, 392, 430, 439, 464, 471,
	477, 483, 486, 488, 496, 499, 501, 507, 513, 515, 518, 527, 537, 541, 548,
	551, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'beginfig'", "'endfig'", "'save'", "'showvariable'", "'draw'", "'fill'",
	"'pickup'", "'withcolor'", "':='", "'='", "':'", "';'", "','", "'('", "')'",
	"'['", "']'", "", "'+'", "'-'", "'*'", "'/'", "", "", "'numeric'", "'pair'",
	"'path'", "", "", "'length'", "", "'with'", "'point'", "'of'", "'scaled'",
	"'shifted'", "'rotated'", "'subpath'", "'reverse'", "'cycle'", "", "'intersectionpoint'",
	"", "", "'begingroup'", "'endgroup'", "", "", "", "", "", "", "'.'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "ASSIGN", "EQUALS", "COLON", "SEMIC",
	"COMMA", "LPAREN", "RPAREN", "LBRACKET", "RBRACKET", "PATHJOIN", "PLUS",
	"MINUS", "TIMES", "OVER", "WHATEVER", "UNIT", "NUMERIC", "PAIR", "PATH",
	"INTERNAL", "PAIRPART", "LENGTH", "MATHFUNC", "WITH", "POINT", "OF", "SCALED",
	"SHIFTED", "ROTATED", "SUBPATH", "REVERSE", "CYCLE", "PATHCLIPOP", "INTERSECTIONPOINT",
	"PEN", "COLOR", "BEGINGROUP", "ENDGROUP", "PTAG", "TAG", "PATHTAG", "MIXEDPTAG",
	"MIXEDTAG", "DECIMALTOKEN", "DOT", "LABEL", "WS",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "ASSIGN",
	"EQUALS", "COLON", "SEMIC", "COMMA", "LPAREN", "RPAREN", "LBRACKET", "RBRACKET",
	"PATHJOIN", "PLUS", "MINUS", "TIMES", "OVER", "WHATEVER", "UNIT", "NUMERIC",
	"PAIR", "PATH", "INTERNAL", "PAIRPART", "LENGTH", "MATHFUNC", "WITH", "POINT",
	"OF", "SCALED", "SHIFTED", "ROTATED", "SUBPATH", "REVERSE", "CYCLE", "PATHCLIPOP",
	"INTERSECTIONPOINT", "PEN", "COLOR", "BEGINGROUP", "ENDGROUP", "PTAG",
	"TAG", "PATHTAG", "MIXEDPTAG", "MIXEDTAG", "DECIMALTOKEN", "DOT", "LABEL",
	"LINECOMMENT", "WS",
}

type PMMPStatemLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewPMMPStatemLexer(input antlr.CharStream) *PMMPStatemLexer {

	l := new(PMMPStatemLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "PMMPStatem.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// PMMPStatemLexer tokens.
const (
	PMMPStatemLexerT__0              = 1
	PMMPStatemLexerT__1              = 2
	PMMPStatemLexerT__2              = 3
	PMMPStatemLexerT__3              = 4
	PMMPStatemLexerT__4              = 5
	PMMPStatemLexerT__5              = 6
	PMMPStatemLexerT__6              = 7
	PMMPStatemLexerT__7              = 8
	PMMPStatemLexerASSIGN            = 9
	PMMPStatemLexerEQUALS            = 10
	PMMPStatemLexerCOLON             = 11
	PMMPStatemLexerSEMIC             = 12
	PMMPStatemLexerCOMMA             = 13
	PMMPStatemLexerLPAREN            = 14
	PMMPStatemLexerRPAREN            = 15
	PMMPStatemLexerLBRACKET          = 16
	PMMPStatemLexerRBRACKET          = 17
	PMMPStatemLexerPATHJOIN          = 18
	PMMPStatemLexerPLUS              = 19
	PMMPStatemLexerMINUS             = 20
	PMMPStatemLexerTIMES             = 21
	PMMPStatemLexerOVER              = 22
	PMMPStatemLexerWHATEVER          = 23
	PMMPStatemLexerUNIT              = 24
	PMMPStatemLexerNUMERIC           = 25
	PMMPStatemLexerPAIR              = 26
	PMMPStatemLexerPATH              = 27
	PMMPStatemLexerINTERNAL          = 28
	PMMPStatemLexerPAIRPART          = 29
	PMMPStatemLexerLENGTH            = 30
	PMMPStatemLexerMATHFUNC          = 31
	PMMPStatemLexerWITH              = 32
	PMMPStatemLexerPOINT             = 33
	PMMPStatemLexerOF                = 34
	PMMPStatemLexerSCALED            = 35
	PMMPStatemLexerSHIFTED           = 36
	PMMPStatemLexerROTATED           = 37
	PMMPStatemLexerSUBPATH           = 38
	PMMPStatemLexerREVERSE           = 39
	PMMPStatemLexerCYCLE             = 40
	PMMPStatemLexerPATHCLIPOP        = 41
	PMMPStatemLexerINTERSECTIONPOINT = 42
	PMMPStatemLexerPEN               = 43
	PMMPStatemLexerCOLOR             = 44
	PMMPStatemLexerBEGINGROUP        = 45
	PMMPStatemLexerENDGROUP          = 46
	PMMPStatemLexerPTAG              = 47
	PMMPStatemLexerTAG               = 48
	PMMPStatemLexerPATHTAG           = 49
	PMMPStatemLexerMIXEDPTAG         = 50
	PMMPStatemLexerMIXEDTAG          = 51
	PMMPStatemLexerDECIMALTOKEN      = 52
	PMMPStatemLexerDOT               = 53
	PMMPStatemLexerLABEL             = 54
	PMMPStatemLexerWS                = 55
)

func (l *PMMPStatemLexer) Sempred(localctx antlr.RuleContext, ruleIndex, predIndex int) bool {
	switch ruleIndex {
	case 46:
		return l.PTAG_Sempred(localctx, predIndex)

	case 49:
		return l.MIXEDPTAG_Sempred(localctx, predIndex)

	default:
		panic("No registered predicate for: " + fmt.Sprint(ruleIndex))
	}
}

func (p *PMMPStatemLexer) PTAG_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	switch predIndex {
	case 0:
		return ispair(p.GetText())

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (p *PMMPStatemLexer) MIXEDPTAG_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	switch predIndex {
	case 1:
		return ispair(p.GetText())

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}
